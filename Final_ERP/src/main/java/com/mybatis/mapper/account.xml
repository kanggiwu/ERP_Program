<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.mybatis.mapper.AccountManagerMapper">
	<resultMap  type="map" id="profitMap"/>
	<resultMap  type="map" id="expenseMap"/>
	<resultMap  type="map" id="salaryMap"/>
	
	<!-- 사원의 급여 정보 조회 (현재 년/월) -->
	<select id="getCurrentSalaryAndEmpInfo" parameterType="map" resultType="map">
   SELECT dept_name, salary.emp_no, rank_name, emp_name, emp_hiredate, emp_account, sal_date,
       DECODE (sal_base, NULL, '0', sal_base) sal_base,
       DECODE (sal_position, NULL, '0', sal_position) sal_position, DECODE (sal_nation_pension, NULL, '0', sal_nation_pension) sal_nation_pension,
       DECODE (sal_health, NULL, '0', sal_health) sal_health, DECODE (sal_industrial_insurance, NULL, '0', sal_industrial_insurance) sal_industrial_insurance,
       DECODE (sal_employ_insurance, NULL, '0', sal_employ_insurance) sal_employ_insurance, DECODE (sal_income_tax, NULL, '0', sal_income_tax) sal_income_tax,
       DECODE (sal_tech, NULL, '0', sal_tech) sal_tech, DECODE (sal_meal, NULL, '0', sal_meal) sal_meal,
       DECODE (sal_commu, NULL, '0', sal_commu) sal_commu, DECODE (sal_local_tax, NULL, '0', sal_local_tax) sal_local_tax,
       DECODE (sal_etc, NULL, '0', sal_etc) sal_etc, DECODE (sal_deduction_etc, NULL, '0', sal_deduction_etc) sal_deduction_etc,
       DECODE (sal_total, NULL, '0', sal_total) sal_total, DECODE (sal_deductions, NULL, '0', sal_deductions) sal_deductions
     FROM Salary
    JOIN (SELECT dept.dept_name dept_name, emp.emp_no emp_no,
                  emp.emp_name emp_name, emp.emp_hiredate emp_hiredate,
                  emp.emp_account emp_account, RANK.rank_name rank_name
          FROM emp, dept, RANK
          WHERE emp.dept_no = dept.dept_no AND emp.rank_no = RANK.rank_no) emp_info
    ON salary.emp_no = emp_info.emp_no
    AND SUBSTR (salary.sal_date, 0, 7) = TO_CHAR (SYSDATE, 'yyyy-mm')
    AND salary.emp_no = #{emp_no}
	</select>
	
	<!-- 급여 정보 수정 -->
	<update id="updateAccount" parameterType="map">
		UPDATE salary
		SET
    		sal_base = NVL(#{sal_base}, 0)
		WHERE sal_no = #{sal_no} AND emp_no = #{emp_no}
	</update>
	
	<!-- 급여 세금과 급여 합계 계산하여 데이터를 삽입하는 프로시저-->  
	<select id="setSalaryProc" statementType="CALLABLE" parameterType="map">
		{call proc_set_salary(        
          #{p_emp_no, mode=IN, jdbcType=NUMERIC},
          #{p_sal_no, mode=IN, jdbcType=NUMERIC}
       	)}
	</select>
	
	<!-- 급여 총계 계산하여 반환하는 프로시저-->  
	<select id="getSalaryProc" statementType="CALLABLE" parameterType="map">
		{call proc_get_salary(        
          #{p_emp_no, mode=IN, jdbcType=NUMERIC},
          #{p_sal_date, mode=IN, jdbcType=VARCHAR},
          #{sal_cursor, mode=OUT, jdbcType=CURSOR, resultMap=salaryMap}
       	)}
	</select>
	
	<!-- 급여 정보 추가 -->
	<insert id="insertAccount" parameterType="map">
		INSERT INTO salary (sal_no, emp_no, sal_date, sal_base, sal_incentive, sal_position, sal_tech, sal_etc, sal_meal, sal_commu)
                  VALUES (seq_salary,  #{emp_no}, #{sal_date}, #{sal_base}, #{sal_incentive}, #{sal_position}, #{sal_tech}, #{sal_etc}, #{sal_meal}, #{sal_commu})
    </insert>
    
    <!-- 수익 리스트 가져오기 -->  
	<select id="getProfitList" resultType="map"> 
	SELECT profit_no, project_name, balance_no, profit_price, profit_detail, profit_date
  	  FROM profit pft, project pjt
  	  WHERE pft.project_no = pjt.project_no
 		<if test="PROFIT_START != null">
 		AND profit_date <![CDATA[>=]]> #{PROFIT_START}
 		</if>
 		<if test="PROFIT_END != null">
 		AND profit_date <![CDATA[<=]]> #{PROFIT_END}
 		</if>
 	ORDER BY profit_date DESC
	</select>
	
   <!-- 프로젝트 리스트 -->
   <select id="getProjectList" resultType="map">
   SELECT project_name, project_no  FROM project WHERE project_register = 'N'
   </select>
   
   <!-- 수익 관리 추가 -->
   <insert id="insertProfit" parameterType="map">
      INSERT INTO profit (profit_no, project_no, profit_price, profit_date, profit_detail)
                 VALUES (seq_profit_no.NEXTVAL, #{project_no}, NVL(#{profit_price}, 0), #{profit_date}, #{profit_detail})
    </insert>
	

	<!-- 지출 관리 조회 -->
	<select id="getExpenseList" resultType="map"> 
   SELECT expense_no, dept_no, expense_type, expense_price, expense_detail, expense_date
      FROM expense
    <where>
		<if test="EXPENSE_DATE != null">
       AND expense_date like #{EXPENSE_DATE}||'%'
       </if>
    </where>
    ORDER BY expense_date DESC
   </select>
	
	<!-- 지출 관리 수정 -->
	<update id="updateExpense" parameterType="map">
		UPDATE expense
		SET
    		dept_no = #{dept_no},
   			expense_type = #{expense_type},
    		expense_price = NVL(#{expense_price}, 0),
    		expense_detail = #{expense_detail},
    		expense_date = #{expense_date}
		WHERE expense_no = #{expense_no}
	</update>
	
	<!-- 지출 관리 추가 -->
	<insert id="insertExpense" parameterType="map">
		INSERT INTO expense (expense_no, dept_no, expense_type, expense_price, expense_detail, expense_date)
                  VALUES (seq_expense_no.NEXTVAL, #{dept_no}, #{expense_type}, NVL(#{expense_price}, 0), #{expense_detail}, #{expense_date})
    </insert>
    
    <!-- 손익 추가 -->
    <insert id="insertBalance" parameterType="map">
		 INSERT INTO Balance (balance_no, balance_date, balance_profit, balance_expense, balance_total)
                              VALUES (seq_balance.NEXTVAL , #{P_YEAR_MONTH}, func_get_total_profit(#{P_YEAR_MONTH}), func_get_total_expense(#{P_YEAR_MONTH}), 
                                                                          func_get_total>profit(#{P_YEAR_MONTH})-func_get_total_expense(#{P_YEAR_MONTH}))
    </insert>
    
	<!-- 손익 조회 -->
    <select id="getBalanceList" resultType="map"> 
      SELECT balance_no, balance_date, balance_profit, balance_expense, balance_total
        FROM balance
      <where>
         <if test="YEAR != null">
         AND SUBSTR(balance_date, 1, 4) = #{YEAR}
         </if>
       </where>
      ORDER BY balance_date ASC
    </select>  
	
	<!-- 월말 결산 수익 뷰 조회 -->
	<select id="getMonthProfitList" resultType="map"> 
   SELECT project_name, profit_sum
     FROM v_profit
	WHERE profit_month = #{STATE_MONTH}
   </select>
   
   <!-- 월말 결산 지출 뷰 조회 -->
	<select id="getMonthExpenseList" resultType="map"> 
   SELECT expense_type, expense_sum
     FROM v_expense
	WHERE expense_month = #{STATE_MONTH}
   </select> 
	
	<!-- 월말 결산 합계 조회 -->
	<select id="getMonthTotalList" resultType="map"> 
   	SELECT balance_no, balance_date, balance_profit, balance_expense, balance_total
      FROM balance
	 WHERE balance_date = #{STATE_MONTH}
   </select> 
    
</mapper>