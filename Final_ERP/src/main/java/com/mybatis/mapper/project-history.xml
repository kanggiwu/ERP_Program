<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.mybatis.mapper.ProjectHistoryMapper">
	<resultMap id = "rm_project" type="map"></resultMap>
  
	<!-- 프로젝트 리스트 조회 -->
	<select id="getProjectHistoryList" parameterType="map" resultType="map">
    SELECT 
           p.project_no
        ,  e.emp_no
        ,  p.project_name
        ,  SUBSTR (p.project_startline, 1, 10) ||'~'|| SUBSTR (p.project_deadline, 1, 10) AS project_period
        ,  e.emp_name
        ,  p.project_type
      FROM project p, project_emp pe, emp e
     WHERE p.project_no = pe.project_no
       AND pe.emp_no = e.emp_no
       AND pe.project_manager = 'Y'
       AND p.project_register = 'Y'
    <if test='project_type != null'>
	   AND p.project_type = #{project_type}
	</if>	
	<if test='project_startline != null'>
	   AND p.project_startline <![CDATA[>=]]> #{project_startline}
	</if>
	<if test='project_deadline != null'>
	   AND p.project_deadline <![CDATA[<=]]> #{project_deadline}
	</if>
	<if test='project_name != null'>
	   AND p.project_name LIKE %#{project_name}%
	</if>	
	</select>

	<!-- 프로젝트 상세 조회 -->
	<select id="getDetailProject" parameterType="map" resultType="map">
		SELECT 
           pro.project_no
        ,  pro.project_name
        ,  SUBSTR (PRO.PROJECT_STARTLINE, 1, 10) || '~' || SUBSTR (PRO.PROJECT_DEADLINE, 1, 10) AS project_period
        ,  pro.project_client
        ,  pro.project_profit
        ,  e.emp_name
        ,  pro.project_type
        ,  pro.project_tech
        ,  pro.project_content
        ,  e.emp_no
        ,  pro_emp.project_manager
      FROM project pro, project_emp pro_emp, emp e
     WHERE pro.project_no = pro_emp.project_no
       AND PRO_EMP.EMP_NO = e.emp_no
       AND pro_emp.project_manager = 'Y'
       AND pro.project_register = 'Y'
       AND pro.project_no = #{project_no}
	</select>
	
	<!-- 프로젝트 인원 리스트 조회 -->
	<select id="getProjectParticipation" parameterType="map" resultType="map">
		<!-- SELECT e.emp_name
  		  FROM emp e, project_emp pe, project p
		 WHERE p.project_no = pe.project_no AND pe.emp_no = e.emp_no AND p.project_no = #{project_no} -->
		 SELECT e.emp_name,
		       e.DEPT_NO,
		       E.TEAM_NO,
		       E.RANK_NO
		  FROM emp e, project_emp pe
		 WHERE e.emp_no = pe.emp_no
		       AND PE.PROJECT_NO = #{project_no}
		       AND PE.PROJECT_MANAGER = 'N'
	</select>
	

<!-- ///////////////////////////////////프로젝트 이력추가 페이지 ///////////////////////////////////////////// -->
	
	<!-- 프로젝트 상세 업데이트 및 인력 추가 -->
	<!-- 인력추가시 사원번호는 integer배열로 받아야 합니다 -->


	<!-- <select id="updateProjectInfo" parameterType="map" statementType="CALLABLE" resultType = "map"> -->
	<select id="updateProjectInfo2" parameterType="map" statementType="CALLABLE">
		{ call prc_array_test(
							#{project_no,mode=IN,jdbcType=NUMERIC} 
             ,#{project_profit,mode=IN,jdbcType=NUMERIC}
             ,#{project_client,mode=IN,jdbcType=VARCHAR}
             ,#{project_type,mode=IN,jdbcType=VARCHAR}
             ,#{project_content,mode=IN,jdbcType=VARCHAR}
             ,#{project_tech,mode=IN,jdbcType=VARCHAR}
             ,#{emp_no,mode=IN,jdbcType=NUMERIC}
             ,#{arr_peno,mode=IN,jdbcType=ARRAY} )
		}
	</select>  
	<insert id="updateProjectInfo" parameterType="list">
     INSERT ALL
         <foreach collection="list" item="item" index="index" separator=" ">
               INTO item_photo(photo_name, item_code) 
               VALUES (#{item.photo_name}, #{item.item_code})
      </foreach>
  SELECT * FROM DUAL
   </insert>
   
	<!-- 프로젝트 이력추가 -->
	<insert id="insertProjectInfo" parameterType="map">
		INSERT INTO project (project_no, project_name, project_profit, project_client, project_startline, project_deadline, project_type, project_content, project_register, project_tech)
                       VALUES(#{seq_project}, #{project_name}, #{project_profit}, #{project_client}, #{project_startline}, #{project_deadline}, #{project_type}, #{project_content}, #{project_register},#{project_tech})
	</insert>
	
	<!-- 프로젝트 참여 사원 등록 -->
	<insert id="insertProjectMember" parameterType="map">
		INSERT INTO project_emp ( project_no, emp_no, project_manager) VALUES(#{project_no}, #{emp_no}, #{project_manager})
	</insert>

	<!-- 프로젝트 네임 리스트 (프로젝트 추가창) -->
	<select id="getprojectNameList" parameterType="map" resultType="map">
		select project_name, project_no
		from project
		where project_register = 'N'
	</select>
	
	<!-- 사원리스트를 부서명, 직위명, 사원이름으로 조건검색하여 프로시저 출력 -->
	<select id="getEmpListProc2" statementType="CALLABLE" parameterType="map">
		{call PROC_EMP_LIST(        
          #{dept_name, mode=IN, jdbcType=VARCHAR},
          #{rank_name, mode=IN, jdbcType=VARCHAR},
          #{emp_name, mode=IN, jdbcType=VARCHAR},
          #{e_cursor, mode=OUT, jdbcType=CURSOR, resultMap=empMap}
       	)}
	</select>    
	
	<!-- 프로젝트 이력 검색 -->
	<select id="getProjectListProc2" statementType="CALLABLE" parameterType="map">
      {call PROC_PROJECT_LIST2(        
          #{project_type, mode=IN, jdbcType=VARCHAR},
          #{project_startline, mode=IN, jdbcType=VARCHAR},
          #{project_deadline, mode=IN, jdbcType=VARCHAR},
          #{project_name, mode=IN, jdbcType=VARCHAR},
          #{pro_cursor, mode=OUT, jdbcType=CURSOR, resultMap=rm_project}
          )}
   </select>   
<!-- /////////////////////////////////////////////////////////////////////////////////////////////////// -->	
	
</mapper>